{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Card","time","title","className","App","useState","days","setDay","hours","setHours","minutes","setMinutes","seconds","setSeconds","cards","document","getElementsByClassName","animate","card","setTimeout","classList","remove","toggle","callback","delay","savedCallback","React","useRef","useEffect","current","timerId","setInterval","clearInterval","useInterval","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAoBA,IAAMA,EAAO,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnB,OACE,sBAAKC,UAAU,YAAf,UACQ,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,mBACdF,EAAK,GAAKA,EAAV,WAAqBA,MAExB,qBAAKE,UAAU,mBAAf,SAAmCD,QA8EhCE,MAzEf,WAAgB,IAAD,EAESC,mBAAS,GAFlB,mBAENC,EAFM,KAEDC,EAFC,OAGYF,mBAAS,IAHrB,mBAGNG,EAHM,KAGAC,EAHA,OAIgBJ,mBAAS,IAJzB,mBAINK,EAJM,KAIEC,EAJF,OAKgBN,mBAAS,IALzB,mBAKNO,EALM,KAKEC,EALF,KAOPC,EAAQC,SAASC,uBAAuB,sBAExCC,EAAU,SAACC,GACfC,YAAW,kBAAIL,EAAMI,GAAME,UAAUC,OAAO,kBAAgB,KAC5DP,EAAMI,GAAME,UAAUE,OAAO,iBAmC/B,OA3EF,SAAqBC,EAAUC,GAC7B,IAAMC,EAAgBC,IAAMC,SAE5BD,IAAME,WAAU,WACdH,EAAcI,QAAUN,KAG1BG,IAAME,WAAU,WAKd,IAAME,EAAUC,aAJhB,WACEN,EAAcI,YAGkBL,GAClC,OAAO,WAAKQ,cAAcF,MAC1B,CAACN,IAoDHS,EAvBgB,WACdpB,EAAWD,EAAQ,GACnBK,EAAQ,GACO,IAAVL,IACDD,EAAWD,EAAQ,GACnBG,EAAW,IAEXI,EAAQ,GAEK,IAAVP,IACDD,EAASD,EAAM,GACfG,EAAW,IACXM,EAAQ,GACG,IAART,IACDD,EAAOD,EAAK,GACZG,EAAS,IACTQ,EAAQ,QAOG,KAErBW,qBAAU,WAEP,OAAO,WACLM,QAAQC,IAAI,2BAEf,IAGA,sBAAKhC,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,8BAEb,sBAAKA,UAAU,YAAf,UACE,sDAEF,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAMF,KAAMK,EAAMJ,MAAM,SACxB,cAAC,EAAD,CAAMD,KAAMO,EAAON,MAAM,UACzB,cAAC,EAAD,CAAMD,KAAMS,EAASR,MAAM,YAC3B,cAAC,EAAD,CAAMD,KAAMW,EAASV,MAAM,eAG3B,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,6BAGnB,qBAAKA,UAAU,wBCxFRiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BZ,M","file":"static/js/main.b0a21980.chunk.js","sourcesContent":["import './App.css';\nimport  React,{ useEffect, useState } from 'react';\n\nfunction useInterval(callback, delay){\n  const savedCallback = React.useRef();\n\n  React.useEffect(()=>{\n    savedCallback.current = callback;\n  });\n\n  React.useEffect(()=>{\n    function tick(){\n      savedCallback.current();\n    }\n\n    const timerId = setInterval(tick, delay);\n    return ()=>{clearInterval(timerId);}\n  },[delay])\n}\n\nconst Card = ({time, title})=>{\n  return(\n    <div className=\"time-card\">\n            <div className=\"time-card__flipper\">\n              <div className=\"time-card__top\"></div>\n              {time>10 ? time : `0${time}`}\n            </div>\n            <div className=\"time-card__title\">{title}</div>\n  </div>\n  )\n}\n\nfunction App() {\n  \n  const [days,setDay] = useState(8);\n  const [hours,setHours] = useState(23);\n  const [minutes,setMinutes] = useState(60);\n  const [seconds,setSeconds] = useState(60);\n\n  const cards = document.getElementsByClassName('time-card__flipper');\n\n  const animate = (card) => {\n    setTimeout(()=>cards[card].classList.remove('animate-card'),500);\n    cards[card].classList.toggle('animate-card'); \n  }\n\n  const runTime = () => {\n    setSeconds(seconds-1);\n    animate(3);\n      if(seconds===0){\n        setMinutes(minutes-1);\n        setSeconds(60);\n\n        animate(2);\n\n        if(minutes===0){\n          setHours(hours-1);\n          setMinutes(60);\n          animate(1);\n          if(hours===0){\n            setDay(days-1);\n            setHours(24);\n            animate(0);\n          }\n        }\n      }\n    \n  }\n\n  useInterval(runTime, 1000)\n\n  useEffect(()=>{\n   \n     return function cleanup(){\n       console.log('unmounting component')\n     }\n  },[])\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"stars-container\">\n      <div className=\"background__stars\"></div>\n      <div className=\"background__stars move\"></div>\n      </div>\n        <div className=\"container\">\n          <h1>We're Launching Soon</h1>\n\n        <div className=\"clock\">\n          <Card time={days} title=\"Days\" />\n          <Card time={hours} title=\"Hours\" />\n          <Card time={minutes} title=\"Minutes\" />\n          <Card time={seconds} title=\"Seconds\" />\n        </div>\n          \n          <div className=\"social-media\">\n            <div className=\"social-media__link\"></div>\n            <div className=\"social-media__link\"></div>\n            <div className=\"social-media__link\"></div>\n          </div>\n        </div>\n        <div className=\"background__sky\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}